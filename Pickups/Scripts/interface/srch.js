Ext.onReady(function () { Ext.get("hrm").on("click", function () { var e = Ext.getCmp("_hrForm"), t = "", n = "", a = function (e, t) { $.getJSON("/Utility/getAppliedLeave", { typFlag: t }, function (t) { if ("true" == t.status.toString()) { var n = []; $.each(t.msg, function (e, t) { n[e] = [t.id, t.staffno, t.staff, t.from, t.to, t.days, t.outstanding, t.branch, t.typeofleave, t.comments] }), e.getStore().removeAll(), e.getStore().loadData(n) } else e.getStore().removeAll() }) }; e || new Ext.Window({ id: "_hrForm", title: "HR MANAGER", height: 600, width: 850, resizable: !1, defaults: { xtype: "panel" }, items: [{ layout: "column", defaults: { xtype: "panel", frame: !0, border: !0, height: 550 }, items: [{ width: "20%", defaults: { xtype: "treepanel" }, items: [{ id: "treeid", width: "100%", height: 580, autoScroll: !0, frame: !0, border: !0, root: { text: "Click on a leave state below", expanded: !0, children: [{ text: "Pending Approval by HoD", leaf: !0, listeners: { click: function () { a(Ext.getCmp("grd"), 1) } } }, { text: "Approved by HoD", leaf: !0, listeners: { click: function () { a(Ext.getCmp("grd"), 2) } } }, { text: "Approved by HR", leaf: !0, listeners: { click: function () { a(Ext.getCmp("grd"), 3) } } }, { text: "Rejected", leaf: !0, listeners: { click: function () { a(Ext.getCmp("grd"), 4) } } }] } }] }, { width: "20%", items: [new Ext.grid.GridPanel({ id: "grd", width: "100%", height: 500, autoScroll: !0, store: new Ext.data.ArrayStore({ fields: [{ name: "id", type: "string" }, { name: "staffno", type: "string" }, { name: "staff", type: "string" }, { name: "from", type: "string" }, { name: "to", type: "string" }, { name: "days", type: "string" }, { name: "outstanding", type: "int" }, { name: "branch", type: "string" }, { name: "typeofleave", type: "string" }, { name: "comments", type: "string" }] }), columns: [{ id: "id", header: "ID", hidden: !0, width: 40, dataIndex: "id" }, { id: "staffno", header: "STAFF No", hidden: !0, width: 40, dataIndex: "staffno" }, { id: "staff", header: "STAFF", hidden: !1, width: 70, dataIndex: "staff" }, { id: "from", header: "FROM", hidden: !0, width: 70, sortable: !0, dataIndex: "from" }, { id: "to", header: "TO", hidden: !0, width: 70, sortable: !0, dataIndex: "to" }, { id: "days", header: "DAYS", hidden: !0, width: 70, sortable: !0, dataIndex: "days" }, { id: "outstanding", header: "OUTSTANDING", hidden: !0, width: 70, sortable: !0, dataIndex: "outstanding" }, { id: "branch", header: "DEPARTMENT", hidden: !0, width: 70, sortable: !0, dataIndex: "branch" }, { id: "typeofleave", header: "LEAVE TYPE", hidden: !0, width: 40, dataIndex: "typeofleave" }, { id: "comments", header: "COMMENTS", hidden: !0, width: 40, dataIndex: "comments" }], autoExpandColumn: "staff", viewConfig: { forceFit: !0 }, listeners: { afterrender: function () { a(Ext.getCmp("grd"), 1) }, rowclick: function (e, a) { t = e.getStore().getAt(a); var d = new Date, o = d.getMonth() + "/" + d.getDate() + "/" + d.getFullYear(), i = decodeURI(t.get("comments").toString()); n = i, $("#commentaries").val(n), n = i + "\r\n" + o + "\r\n", console.log(n) } } })] }, { width: "60%", defaults: { xtype: "panel", frame: !0, border: !0, autoScroll: !0 }, items: [{ title: "recent comments", defaults: { xtype: "textarea", width: "100%", autoScroll: !0 }, items: [{ id: "commentaries", listeners: { afterrender: function () { $("#commentaries").attr("readonly", !0) } } }] }, { title: "present comments", defaults: { xtype: "htmleditor", anchor: "100%", autoScroll: !0 }, items: [{ id: "pcom" }], buttons: [{ text: "Approve", handler: function () { Ext.getCmp("grd").getStore().getCount() > 0 && Ext.getCmp("pcom").getValue().length > 0 ? (n = encodeURI(n) + encodeURI(Ext.getCmp("pcom").getValue()), $.post("/Leave/ProcessLeaveRequest", { _id: t.get("id"), comments: n }, function (e) { "true" == e.status.toString() && (Ext.Msg.show({ title: "NIB LEAVE APP", msg: "Leave Request Approved", buttons: Ext.Msg.OK, animEl: "elId", icon: Ext.MessageBox.INFO }), a(Ext.getCmp("grd"), 3), Ext.getCmp("pcom").setValue("")) }, "json")) : Ext.Msg.alert("MISSING FIELDS", "Please enter all the relevant fields to proceed", this) } }, { text: "Reject", handler: function () { Ext.getCmp("grd").getStore().getCount() > 0 && Ext.getCmp("pcom").getValue().length > 0 && $.post("/Leave/ProcessLeaveDenial", { _id: t.get("id"), daysTotake: t.get("days"), remainingDays: t.get("outstanding") }, function (e) { "true" == e.toString() && Ext.Msg.show({ title: "NIB LEAVE APP", msg: "Leave Request Rejected", buttons: Ext.Msg.OK, animEl: "elId", icon: Ext.MessageBox.INFO }), a(Ext.getCmp("grd"), 4), Ext.getCmp("pcom").setValue("") }, "json") } }] }] }] }] }).show() }) });